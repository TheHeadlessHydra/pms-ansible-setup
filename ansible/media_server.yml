---
- hosts: media_server
  vars:
    seedbox_user: headless
    seedbox_ip: briareus.feralhosting.com
    seedbox_key: /home/headless/.ssh/hydra_seedbox
    seedbox_download_dir_remote: /media/sdj1/headless/private/transmission/data/
    seedbox_download_dir_mount: /mnt/seedbox/downloads

    rsync_cron_wrapper_conf_template: ../rsync/rsync-cron-wrapper.conf.j2
    rsync_cron_wrapper_conf_result: ../rsync/rsync-cron-wrapper.conf
    rsync_cron_wrapper_job: ../rsync/rsync-cron-wrapper.pl
    rsync_download_location: /mnt/headlessNAS/downloads
    
    nas_name: HeadlessNAS
    nas_mount_location: /mnt/headlessNAS
    plex_directory: /srv/plex
    sabnzbd_directory: /srv/sabnzbd
    sonarr_directory: /srv/sonarr

    docker_compose_file_location_local: "{{ playbook_dir}}/../docker/NUC/docker-compose.yml"

    # The below environment file location is hardcoded in the systemd script
    environment_file_location: "/etc/environment"

    plex_startup_script: plex_server
    plex_startup_script_local_location: "{{ playbook_dir }}/../systemd/{{ plex_startup_script }}"
    # The below script location is hardcoded in the systemd script
    plex_startup_script_bin_location: "/usr/local/bin/{{ plex_startup_script }}"
    
    systemd_file_location_local: "{{ playbook_dir  }}/../systemd/plex_server.service"
    systemd_file_location: "/etc/systemd/system/plex_server.service"

  tasks:
    # include other var files
    - name: include secrets file
      include_vars: secrets.yml
   
    # Install pre-requisite libraries
    - name: install docker
      apt:
        name: docker
        state: present
    - name: install docker-compose
      apt:
        name: docker-compose
        state: present
    - name: install cifs-utils (for mounting NAS)
      apt:
        name: cifs-utils
        state: present
    - name: install avahi (gives ability to reference NAS via friendly name)
      apt:
        name: avahi-daemon
        state: present
    - name: install sshfs (gives ability to mount remote ip file systems via ssh)
      apt:
        name: sshfs
        state: present

    - name: make seedbox mount directory
      file:
        path: '{{ seedbox_download_dir_mount }}'
        state: directory
        mode: 0755
        owner: root
        group: 1651

#    - name: Mount downloads directory of seedbox via sshfs
#      shell: "sshfs {{ seedbox_user }}@{{ seedbox_ip }}:{{ seedbox_download_dir_remote }} {{ seedbox_download_dir_mount }} -o reconnect,big_writes,max_background=100,kernel_cache,auto_cache,no_readahead,large_read,auto_unmount,allow_other,idmap=user,IdentityFile={{ seedbox_key }},cache=yes,compression=no,Ciphers=arcfour"

    - name: Mount NAS using fstab
      lineinfile:
        dest: /etc/fstab
        state: present
        line: '//{{ nas_name }}.local/Public {{ nas_mount_location }} cifs rw,guest,uid=1000,iocharset=utf8 0 0'
#    - name: Finalize mount of fstab
#      shell: "mount -a"

    #set up requires files for syncing
    - name: set up required files for syncing
      template:
        src: "{{ rsync_cron_wrapper_conf_template }}"
        dest: "{{ rsync_cron_wrapper_conf_result }}"
      vars:
        seedbox_key_r: "{{ seedbox_key }}"
        seedbox_ip_r: "{{ seedbox_ip }}"
        seedbox_user_r: "{{ seedbox_user }}"
        seedbox_download_dir_remote_r: "{{ seedbox_download_dir_remote }}"
        rsync_download_location_r: "{{ rsync_download_location }}"

    - name: set up cron job to sync downloads every minute
      cron:
        name: "SyncRemoteDownloads"
        job: "{{ playbook_dir }}/{{ rsync_cron_wrapper_job }} -c {{ playbook_dir }}/{{ rsync_cron_wrapper_conf_result }}"

    # Set up required plex files and directories
    - name: make plex directory
      file:
        path: '{{ plex_directory }}'
        state: directory
        mode: 0755
        owner: root
        group: root
    - name: copy startup script file to local/bin
      copy:
        src: "{{ plex_startup_script_local_location }}"
        dest: "{{ plex_startup_script_bin_location }}"
        owner: root
        group: root
        mode: 0555
    - name: copy systemd script to systemd location
      copy:
        src: "{{ systemd_file_location_local }}"
        dest: "{{ systemd_file_location }}"
        owner: root
        group: root
        mode: 0555

    # Set up sonarr
    - name: make sonarr directory
      file:
        path: '{{ sonarr_directory }}'
        state: directory
        mode: 666
        owner: root
        group: root

    ### Set up environment variables
    - name: create environment variable file
      file:
        path: "{{ environment_file_location }}"
        state: touch
    - name: put docker compose file location in environment variable for use with plex_server startup script
      lineinfile:
        dest: "{{ environment_file_location }}"
        state: present
        line: 'PLEX_DOCKER_COMPOSE_LOC={{ docker_compose_file_location_local }}'
    - name: put plex claim in environment variable for use with docker-compose
      lineinfile:
        dest: "{{ environment_file_location }}"
        state: present
        line: 'PLEX_CLAIM={{ plex_claim }}'
    - name: put NAS mount location in environment variable for use with docker-compose
      lineinfile:
        dest: "{{ environment_file_location }}"
        state: present
        line: 'NAS_MNT_LOCATION={{ nas_mount_location }}'
    - name: put plex directory location in environment variable for use with docker-compose
      lineinfile:
        dest: "{{ environment_file_location }}"
        state: present
        line: 'PLEX_DIRECTORY={{ plex_directory }}'
    - name: put seedbox download dir mount location in environment variable for use with docker-compose
      lineinfile:
        dest: "{{ environment_file_location }}"
        state: present
        line: 'SEEDBOX_DOWNLOAD_MOUNT={{ rsync_download_location }}'
    - name: put sonarr directory location in environment variable for use with docker-compose
      lineinfile:
        dest: "{{ environment_file_location }}"
        state: present
        line: 'SONARR_DIRECTORY={{ sonarr_directory }}'


    # Set up sabnzbd
#    - name: make sabnzdb group
#      group:
#        name: sabnzbd
#        state: present
#        gid: 666
#    - name: make sabnzdb user
#      user:
#        name: sabnzbd
#        state: present
#        uid: 666
#        group: 666
#    - name: make sab directory
#      file:
#        path: '{{ sabnzbd_directory }}'
#        state: directory
#        owner: 666
#        group: 666
#        mode: 0755
#    - name: put sab directory location in environment variable
#      lineinfile:
#        dest: "{{ environment_file_location }}"
#        state: present
#        line: 'SABNZBD_DIRECTORY={{ sabnzbd_directory }}'